apiVersion: v1
kind: Namespace
metadata:
  name: cortex-xdr
  labels:
    app.kubernetes.io/name: cortex-xdr
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/audit: privileged
---

apiVersion: v1
kind: Secret
metadata:
  name: xdr-agent-deployment
  namespace: cortex-xdr
type: Opaque
stringData:
  distribution-id: "339e246affba4a6e9f33eea9ebef8673"

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: xdr-agent-user
  namespace: cortex-xdr

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xdr-agent-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xdr-agent-role-binding-cortex-xdr
subjects:
- kind: ServiceAccount
  name: xdr-agent-user
  namespace: cortex-xdr
roleRef:
  kind: ClusterRole
  name: xdr-agent-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: cortex-docker-secret
  namespace: cortex-xdr
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiaHR0cHM6Ly91cy1jZW50cmFsMS1kb2NrZXIucGtnLmRldiI6IHsidXNlcm5hbWUiOiAiX2pzb25fa2V5IiwgInBhc3N3b3JkIjogIntcbiAgXCJ0eXBlXCI6IFwic2VydmljZV9hY2NvdW50XCIsXG4gIFwicHJvamVjdF9pZFwiOiBcInhkci11cy0xMDA4MjYxMDMwMzQ0XCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCIzNjIzNzliMGNhOWZiNWNjZDk4NWUwNjdmODI1ZTU5ZmZmYzdmOTRiXCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUURZS1ZUc3A4b0tqYzJFXFxuR2sxNHlrakthYUVpQTBlWUY1UmVpR0xtMU9MR2ZnS3pHbHJacmZVNUJnSmhDV1h2MWxDZi9KOStieTdncm1JWlxcbmZLTlZZbGlzVzZZOHhBZGF2WWhkdEpIYlFNaTgwZ0pZZUFhYk1iOVBSZllrbmRuOGNaUkZ1WXUrK0h1dmhqRXFcXG53d09hTE1QM3A0MnlPZkRNWjZXV0pEUjNLRkxrU3FxVFBQUzIrMmZNRWJRZExxYXJ5Znh6YklCemEvcmdpRWM2XFxuR1lmc09lbzlDbXFZNzY3d1dqZ0dGWWRiWVVXaVFCRlRvb1BaT0ZHalZpNmpMU1QxZmVjY2xTcXczMCtrYTJWOVxcbkF6R2V2d1phMzlnNVN4eVZVNkdpeER1ZnFua1RoaGZQUnozYU1nc3pYQkd5d1JVNTZSZ1g1eS9MRncvSk5DTEdcXG5hQS9ZSnVFTEFnTUJBQUVDZ2dFQUFKNVJwMkd0Z3MwNERzNHlkWXVDbk0yamorRFpoaFpmTHN3T0dHSDRpaC9YXFxuS3lNQ3FvZkVZVmJpajl1Q2hxYWkwV3BjSEhUOStkZVY0VVBKaGRlRHNHNk1zYlRQM3BNWFBrbGpkM0NlZ21mSlxcbmFPNWkrbk93ZSs0VHo3UUI2U1o4Q1owSHlOS1dMQURpeUNBSnRSbTJyOUV6WnhTaVd6dGFybXpKRjZRdVpJZk9cXG56dXN2M08vUGR1WWFVN3ErT2NDdDZiYVNSSllBZ1pjS1JFbmtmQytrL0hFZm5aYlk0cnQwOGllQStINko5K3M2XFxucjFyajNQMDhRVGZOSitxWWMyaDBrQ3Faamh2Q1RpNHJBNEE5TmVmWnZJSXh6K2ZDZnVjWEdBWllwMG9INUczUFxcbklTcUhiT2o4elB4R29yREp1ZklCclNBOGNZWVV4c1V5cS9vZE9meE04UUtCZ1FENXdpT2hUZnduWmUzQ0pid3FcXG5qWVhJNGJkN1pvamhYY013VTN2MTBCNkFLbnFXMEcxKytxZGNpei96VVFEcHJ6MjFxVmZiSkIyNFhZSEppd25zXFxuelFmdUtWczI4TGdnTU5EK3RCZUlNRk82U21LMm1jTkdRcTZRdnJJWjhXdVVIK3d4Zi9XcEJxWTZyOFZwOTVkM1xcbmd0OUgwVGgwRUFMNlNhcVdhUkhOR09LRTBRS0JnUURka0VDSkxBREFkR0p4SytxeURnTWZQR1VzYmlQVHdOUk5cXG52M3h0MGpQQlZmOEdBcFlFMStCYVRkalNLbkxYa2N6MzRYd3lGcGN4a2pZd08wcit6eWplMTdKN1VTSFhlR3NJXFxuV0o0N1V3ZHZFcUdPdHFTazh2UkNrWXpFcHlyWlpySmxVZFUyQk5Fb25Xelk3Y2pLYzlHck96SmtyV1E2a0tPUlxcbmxrcGdwZml2R3dLQmdRQ3FCWlZIeTlUcDVTT1QxU2hoTjNKcHErN0NIS3oxN21SZjA1VkJZMnBBQ2FybVhBRU9cXG5QZ2dNb2VibzlxM09aek4xSlZEZnA1aHIxNHZ3N2F2Vi9rVjF4Y1dJZ3hwMUg0Wkd2Y1ovT1pibDdKbUNnTzVFXFxuT0VTcDJJZFp6ZFZVUXQ4Qlc0Q2FqaUkvTlVVSXZEbnFhN2NnSnJkdG16REx2YlpaS2pHcUUxU3c0UUtCZ0IyblxcbjVUdDNERksyUVVic25lbGZQc083amI4NHJzcjFFSFdubjd3RFdySVNGS1IxVENjeHpmSElZYkVmeFdkZE9KWWxcXG5ORDV3RDZTdThWbmJWZHB0V0FjYnorUDVwQkgzS0R4aHdDd29uT0lkR0VyRjM1dkVlVFUvemh1MFZHUHMvd3ZZXFxudkRVU3gvd3J0aG9ER2RFZlYzMFgyMUxtY25mMFREQjhjVkFtWnZicEFvR0FjRGwzc0Y3TUx1dXBQR3N5a3lKclxcblF3aUJwb3BDT3VyVFFtVldsMURRV0pCcU4wQ0JqNVdOK0pYT0lBWWFNUnllU1JkalV6OG9qK2lSMktiYTNVd01cXG5JS1ZQRXdtd25UcDBBT3JnSFI1d3Fxc08ydTZSVXdhOVZaSm04RER2MTBNblprKzNDQkhhN3UrdkRhUC93Z2VLXFxubXFKejAwVmZUSHBHSTlSTnY0MlkzVVU9XFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDgyNjEwMzAzNDQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMTQwMTY4MjgyNDgwNzAwMDk2ODhcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW5cIixcbiAgXCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHNcIixcbiAgXCJjbGllbnRfeDUwOV9jZXJ0X3VybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvcHVsbC1pbWFnZSU0MHhkci11cy0xMDA4MjYxMDMwMzQ0LmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwidW5pdmVyc2VfZG9tYWluXCI6IFwiZ29vZ2xlYXBpcy5jb21cIlxufVxuIiwgImVtYWlsIjogInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDgyNjEwMzAzNDQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCAiYXV0aCI6ICJYMnB6YjI1ZmEyVjVPbnNpZEhsd1pTSTZJQ0p6WlhKMmFXTmxYMkZqWTI5MWJuUWlMQ0FpY0hKdmFtVmpkRjlwWkNJNklDSjRaSEl0ZFhNdE1UQXdPREkyTVRBek1ETTBOQ0lzSUNKd2NtbDJZWFJsWDJ0bGVWOXBaQ0k2SUNJek5qSXpOemxpTUdOaE9XWmlOV05qWkRrNE5XVXdOamRtT0RJMVpUVTVabVptWXpkbU9UUmlJaXdnSW5CeWFYWmhkR1ZmYTJWNUlqb2dJaTB0TFMwdFFrVkhTVTRnVUZKSlZrRlVSU0JMUlZrdExTMHRMVnh1VFVsSlJYWlJTVUpCUkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZGUmtGQlUwTkNTMk4zWjJkVGFrRm5SVUZCYjBsQ1FWRkVXVXRXVkhOd09HOUxhbU15UlZ4dVIyc3hOSGxyYWt0aFlVVnBRVEJsV1VZMVVtVnBSMHh0TVU5TVIyWm5TM3BIYkhKYWNtWlZOVUpuU21oRFYxaDJNV3hEWmk5S09TdGllVGRuY20xSldseHVaa3RPVmxsc2FYTlhObGs0ZUVGa1lYWlphR1IwU2toaVVVMXBPREJuU2xsbFFXRmlUV0k1VUZKbVdXdHVaRzQ0WTFwU1JuVlpkU3NyU0hWMmFHcEZjVnh1ZDNkUFlVeE5VRE53TkRKNVQyWkVUVm8yVjFkS1JGSXpTMFpNYTFOeGNWUlFVRk15S3pKbVRVVmlVV1JNY1dGeWVXWjRlbUpKUW5waEwzSm5hVVZqTmx4dVIxbG1jMDlsYnpsRGJYRlpOelkzZDFkcVowZEdXV1JpV1ZWWGFWRkNSbFJ2YjFCYVQwWkhhbFpwTm1wTVUxUXhabVZqWTJ4VGNYY3pNQ3RyWVRKV09WeHVRWHBIWlhaM1dtRXpPV2MxVTNoNVZsVTJSMmw0UkhWbWNXNXJWR2hvWmxCU2VqTmhUV2R6ZWxoQ1IzbDNVbFUxTmxKbldEVjVMMHhHZHk5S1RrTk1SMXh1WVVFdldVcDFSVXhCWjAxQ1FVRkZRMmRuUlVGQlNqVlNjREpIZEdkek1EUkVjelI1WkZsMVEyNU5NbXBxSzBSYWFHaGFaa3h6ZDA5SFIwZzBhV2d2V0Z4dVMzbE5RM0Z2WmtWWlZtSnBhamwxUTJoeFlXa3dWM0JqU0VoVU9TdGtaVlkwVlZCS2FHUmxSSE5ITmsxellsUlFNM0JOV0ZCcmJHcGtNME5sWjIxbVNseHVZVTgxYVN0dVQzZGxLelJVZWpkUlFqWlRXamhEV2pCSWVVNUxWMHhCUkdsNVEwRktkRkp0TW5JNVJYcGFlRk5wVjNwMFlYSnRla3BHTmxGMVdrbG1UMXh1ZW5WemRqTlBMMUJrZFZsaFZUZHhLMDlqUTNRMlltRlRVa3BaUVdkYVkwdFNSVzVyWmtNcmF5OUlSV1p1V21KWk5ISjBNRGhwWlVFclNEWktPU3R6Tmx4dWNqRnlhak5RTURoUlZHWk9TaXR4V1dNeWFEQnJRM0ZhYW1oMlExUnBOSEpCTkVFNVRtVm1XblpKU1hoNksyWkRablZqV0VkQldsbHdNRzlJTlVjelVGeHVTVk54U0dKUGFqaDZVSGhIYjNKRVNuVm1TVUp5VTBFNFkxbFpWWGh6VlhseEwyOWtUMlo0VFRoUlMwSm5VVVExZDJsUGFGUm1kMjVhWlRORFNtSjNjVnh1YWxsWVNUUmlaRGRhYjJwb1dHTk5kMVV6ZGpFd1FqWkJTMjV4VnpCSE1Tc3JjV1JqYVhvdmVsVlJSSEJ5ZWpJeGNWWm1Za3BDTWpSWVdVaEthWGR1YzF4dWVsRm1kVXRXY3pJNFRHZG5UVTVFSzNSQ1pVbE5SazgyVTIxTE1tMWpUa2RSY1RaUmRuSkpXamhYZFZWSUszZDRaaTlYY0VKeFdUWnlPRlp3T1RWa00xeHVaM1E1U0RCVWFEQkZRVXcyVTJGeFYyRlNTRTVIVDB0Rk1GRkxRbWRSUkdSclJVTktURUZFUVdSSFNuaExLM0Y1UkdkTlpsQkhWWE5pYVZCVWQwNVNUbHh1ZGpONGREQnFVRUpXWmpoSFFYQlpSVEVyUW1GVVpHcFRTMjVNV0d0amVqTTBXSGQ1Um5CamVHdHFXWGRQTUhJcmVubHFaVEUzU2pkVlUwaFlaVWR6U1Z4dVYwbzBOMVYzWkhaRmNVZFBkSEZUYXpoMlVrTnJXWHBGY0hseVdscHlTbXhWWkZVeVFrNUZiMjVYZWxrM1kycExZemxIY2s5NlNtdHlWMUUyYTB0UFVseHViR3R3WjNCbWFYWkhkMHRDWjFGRGNVSmFWa2g1T1ZSd05WTlBWREZUYUdoT00wcHdjU3MzUTBoTGVqRTNiVkptTURWV1Fsa3ljRUZEWVhKdFdFRkZUMXh1VUdkblRXOWxZbTg1Y1ROUFducE9NVXBXUkdad05XaHlNVFIyZHpkaGRsWXZhMVl4ZUdOWFNXZDRjREZJTkZwSGRtTmFMMDlhWW13M1NtMURaMDgxUlZ4dVQwVlRjREpKWkZwNlpGWlZVWFE0UWxjMFEyRnFhVWt2VGxWVlNYWkVibkZoTjJOblNuSmtkRzE2UkV4MllscGFTMnBIY1VVeFUzYzBVVXRDWjBJeWJseHVOVlIwTTBSR1N6SlJWV0p6Ym1Wc1psQnpUemRxWWpnMGNuTnlNVVZJVjI1dU4zZEVWM0pKVTBaTFVqRlVRMk40ZW1aSVNWbGlSV1o0VjJSa1QwcFpiRnh1VGtRMWQwUTJVM1U0Vm01aVZtUndkRmRCWTJKNksxQTFjRUpJTTB0RWVHaDNRM2R2Yms5SlpFZEZja1l6TlhaRlpWUlZMM3BvZFRCV1IxQnpMM2QyV1Z4dWRrUlZVM2d2ZDNKMGFHOUVSMlJGWmxZek1GZ3lNVXh0WTI1bU1GUkVRamhqVmtGdFduWmljRUZ2UjBGalJHd3pjMFkzVFV4MWRYQlFSM041YTNsS2NseHVVWGRwUW5CdmNFTlBkWEpVVVcxV1Yyd3hSRkZYU2tKeFRqQkRRbW8xVjA0clNsaFBTVUZaWVUxU2VXVlRVbVJxVlhvNGIyb3JhVkl5UzJKaE0xVjNUVnh1U1V0V1VFVjNiWGR1VkhBd1FVOXlaMGhTTlhkeGNYTlBNblUyVWxWM1lUbFdXa3B0T0VSRWRqRXdUVzVhYXlzelEwSklZVGQxSzNaRVlWQXZkMmRsUzF4dWJYRktlakF3Vm1aVVNIQkhTVGxTVG5ZME1sa3pWVlU5WEc0dExTMHRMVVZPUkNCUVVrbFdRVlJGSUV0RldTMHRMUzB0WEc0aUxDQWlZMnhwWlc1MFgyVnRZV2xzSWpvZ0luQjFiR3d0YVcxaFoyVkFlR1J5TFhWekxURXdNRGd5TmpFd016QXpORFF1YVdGdExtZHpaWEoyYVdObFlXTmpiM1Z1ZEM1amIyMGlMQ0FpWTJ4cFpXNTBYMmxrSWpvZ0lqRXhOREF4TmpneU9ESTBPREEzTURBd09UWTRPQ0lzSUNKaGRYUm9YM1Z5YVNJNklDSm9kSFJ3Y3pvdkwyRmpZMjkxYm5SekxtZHZiMmRzWlM1amIyMHZieTl2WVhWMGFESXZZWFYwYUNJc0lDSjBiMnRsYmw5MWNta2lPaUFpYUhSMGNITTZMeTl2WVhWMGFESXVaMjl2WjJ4bFlYQnBjeTVqYjIwdmRHOXJaVzRpTENBaVlYVjBhRjl3Y205MmFXUmxjbDk0TlRBNVgyTmxjblJmZFhKc0lqb2dJbWgwZEhCek9pOHZkM2QzTG1kdmIyZHNaV0Z3YVhNdVkyOXRMMjloZFhSb01pOTJNUzlqWlhKMGN5SXNJQ0pqYkdsbGJuUmZlRFV3T1Y5alpYSjBYM1Z5YkNJNklDSm9kSFJ3Y3pvdkwzZDNkeTVuYjI5bmJHVmhjR2x6TG1OdmJTOXliMkp2ZEM5Mk1TOXRaWFJoWkdGMFlTOTROVEE1TDNCMWJHd3RhVzFoWjJVbE5EQjRaSEl0ZFhNdE1UQXdPREkyTVRBek1ETTBOQzVwWVcwdVozTmxjblpwWTJWaFkyTnZkVzUwTG1OdmJTSXNJQ0oxYm1sMlpYSnpaVjlrYjIxaGFXNGlPaUFpWjI5dloyeGxZWEJwY3k1amIyMGlmUT09In19fQ==

---

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cortex-agent
  namespace: cortex-xdr
  labels:

    app.kubernetes.io/name: cortex-agent
    app.kubernetes.io/part-of: cortex
    app.kubernetes.io/component: agent
    app.kubernetes.io/version: "latest"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-agent

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        app.kubernetes.io/name: cortex-agent
      annotations:

        container.apparmor.security.beta.kubernetes.io/cortex-agent: unconfined

    spec:
      serviceAccountName: xdr-agent-user

      nodeSelector:
        kubernetes.io/os: linux

      hostNetwork: true
      hostPID: true
      hostIPC: true
      
      tolerations:

      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: PreferNoSchedule
      - operator: Exists
        effect: NoExecute

      containers:
      - name: cortex-agent
        image: us-central1-docker.pkg.dev/xdr-us-1008261030344/agent-docker/cortex-agent:latest

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYSLOG
            - SYS_CHROOT
            - SYS_MODULE
            - SYS_PTRACE
            - SYS_RESOURCE
            - SYS_RAWIO
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - FOWNER
            - KILL
            - SETGID
            - SETUID

        env:
        - name: XDR_HOST_ROOT
          value: "/host-fs"
        - name: XDR_POD_INFO
          value: "/var/run/pod-info"
        - name: XDR_CLUSTER_NAME_URL
          value: "metadata2"
        - name: XDR_CLUSTER_NAME
          value: ""
        - name: XDR_VAR_LOG_HOST_PATH
          value: "/var/log"

        volumeMounts:

        - name: host-fs
          mountPath: /host-fs
          readOnly: true

        - name: var-log
          mountPath: /var/log

        - name: host-km-directory
          mountPath: /lib/modules

        - name: pod-info
          mountPath: /var/run/pod-info
          readOnly: true

        - name: agent-ids
          mountPath: /etc/traps

        - name: deployment-secrets
          mountPath: /opt/traps/config/deployment
          readOnly: true

        resources:
          requests:
            cpu: "200m"
            memory: "600Mi"
          limits:
            cpu: "1500m"
            memory: "2Gi"

      terminationGracePeriodSeconds: 90

      volumes:
      - name: host-fs
        hostPath:
          path: /
          type: Directory

      - name: var-log
        hostPath:
          path: "/var/log"
          type: DirectoryOrCreate

      - name: host-km-directory
        hostPath:
          path: /lib/modules

      - name: pod-info
        downwardAPI:
          items:
          - path: uid
            fieldRef:
              fieldPath: metadata.uid
          - path: name
            fieldRef:
              fieldPath: metadata.name
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
          - path: annotations
            fieldRef:
              fieldPath: metadata.annotations
      - name: agent-ids
        hostPath:
            path: /etc/traps
            type: DirectoryOrCreate

      - name: deployment-secrets
        secret:
          secretName: xdr-agent-deployment
      
      imagePullSecrets:
      - name: cortex-docker-secret